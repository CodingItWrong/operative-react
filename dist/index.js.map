{"version":3,"sources":["../src/index.js"],"names":["useOperative","httpClient","webSocket","handleOutOfOrder","persister","operative","setOperative","records","setRecords","Operative","create","onChange","then","newOperative","ready","attributes","update","record","destroy","recordToDelete","sync","loadAll"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAKf;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJC,SACI,QADJA,SACI;;AAAA,kBAC8B,qBAAS,IAAT,CAD9B;AAAA;AAAA,MACGC,SADH;AAAA,MACcC,YADd;;AAAA,mBAE0B,qBAAS,EAAT,CAF1B;AAAA;AAAA,MAEGC,OAFH;AAAA,MAEYC,UAFZ;;AAIJ,wBAAU,YAAM;AACdC,gCAAUC,MAAV,CAAiB;AACfT,MAAAA,UAAU,EAAVA,UADe;AAEfC,MAAAA,SAAS,EAATA,SAFe;AAGfC,MAAAA,gBAAgB,EAAhBA,gBAHe;AAIfC,MAAAA,SAAS,EAATA,SAJe;AAKfO,MAAAA,QAAQ,EAAEH;AALK,KAAjB,EAMGI,IANH,CAMQ,UAAAC,YAAY,EAAI;AACtBP,MAAAA,YAAY,CAACO,YAAD,CAAZ;AACD,KARD;AASD,GAVD,EAUG,CAACZ,UAAD,EAAaC,SAAb,EAAwBC,gBAAxB,EAA0CC,SAA1C,CAVH;AAYA,MAAMU,KAAK,GAAGT,SAAS,KAAK,IAA5B;AAEA,MAAMK,MAAM,GAAG,wBAAY,UAAAK,UAAU;AAAA,WAAIV,SAAS,CAACK,MAAV,CAAiBK,UAAjB,CAAJ;AAAA,GAAtB,EAAwD,CACrEV,SADqE,CAAxD,CAAf;AAIA,MAAMW,MAAM,GAAG,wBACb,UAACC,MAAD,EAASF,UAAT;AAAA,WAAwBV,SAAS,CAACW,MAAV,CAAiBC,MAAjB,EAAyBF,UAAzB,CAAxB;AAAA,GADa,EAEb,CAACV,SAAD,CAFa,CAAf;AAKA,MAAMa,OAAO,GAAG,wBACd,UAAAC,cAAc;AAAA,WAAId,SAAS,UAAT,CAAiBc,cAAjB,CAAJ;AAAA,GADA,EAEd,CAACd,SAAD,CAFc,CAAhB;AAKA,MAAMe,IAAI,GAAG,wBAAY;AAAA,WAAMf,SAAS,CAACe,IAAV,EAAN;AAAA,GAAZ,EAAoC,CAACf,SAAD,CAApC,CAAb;AAEA,wBAAU,YAAM;AACd,QAAIS,KAAJ,EAAW;AACTN,MAAAA,UAAU,CAACH,SAAS,CAACE,OAAX,CAAV;AACAF,MAAAA,SAAS,CAACgB,OAAV;AACD;AACF,GALD,EAKG,CAACP,KAAD,EAAQT,SAAR,CALH;AAOA,SAAO;AAAES,IAAAA,KAAK,EAALA,KAAF;AAASP,IAAAA,OAAO,EAAPA,OAAT;AAAkBG,IAAAA,MAAM,EAANA,MAAlB;AAA0BM,IAAAA,MAAM,EAANA,MAA1B;AAAkCE,IAAAA,OAAO,EAAPA,OAAlC;AAA2CE,IAAAA,IAAI,EAAJA;AAA3C,GAAP;AACD,CA/CD","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport Operative from 'operative-client';\n\nconst useOperative = ({\n  httpClient,\n  webSocket,\n  handleOutOfOrder,\n  persister,\n}) => {\n  const [operative, setOperative] = useState(null);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    Operative.create({\n      httpClient,\n      webSocket,\n      handleOutOfOrder,\n      persister,\n      onChange: setRecords,\n    }).then(newOperative => {\n      setOperative(newOperative);\n    });\n  }, [httpClient, webSocket, handleOutOfOrder, persister]);\n\n  const ready = operative !== null;\n\n  const create = useCallback(attributes => operative.create(attributes), [\n    operative,\n  ]);\n\n  const update = useCallback(\n    (record, attributes) => operative.update(record, attributes),\n    [operative]\n  );\n\n  const destroy = useCallback(\n    recordToDelete => operative.delete(recordToDelete),\n    [operative]\n  );\n\n  const sync = useCallback(() => operative.sync(), [operative]);\n\n  useEffect(() => {\n    if (ready) {\n      setRecords(operative.records);\n      operative.loadAll();\n    }\n  }, [ready, operative]);\n\n  return { ready, records, create, update, destroy, sync };\n};\n\nexport { useOperative };\n"],"file":"index.js"}